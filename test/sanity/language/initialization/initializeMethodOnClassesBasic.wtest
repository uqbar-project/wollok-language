/**
  * Scenario: a hierarchy of classes, one of them uses initialize from superclass 
	* and the other simply overrides it
  */
class A {
	var property a
	
	method initialize() {
		a = 1
	}
}

class B inherits A {
	var property b
	
	method initialize() {
		super()
		b = 2
	}
}

class C inherits A {
	var property b
	
	method initialize() {
		b = 2
	}
}

describe "instance of B values" {
	const b = new B()

	test "Overrided initialize with super executes superclass initialize" {
		assert.equals(1, b.a())
	}

	test "Overrided initialize with super executes additional commands" {
		assert.equals(2, b.b())
	}
}

describe "instance of C values" {
	const c = new C()

	test "Overrided initialize with no super does not execute superclass initialize" {
		assert.equals(null, c.a())
	}

	test "Overrided initialize with no super executes its commands" {
		assert.equals(2, c.b())
	}
}
