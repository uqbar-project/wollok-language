/**
  * Scenario: a class with attributes in which values depend on other attributes, stopped by correct named parameters instantiation
  */
class A {

	var property a = c + b
	var property b = a
	const property c = b + 1

	method m() = a + b + c

}

describe "cyclic dependent initialization on instances" {

  const a = new A(a = 7)

  test "first attribute" {
    assert.equals(7, a.a())
  }

  test "second attribute" {
    assert.equals(7, a.b())
  }

  test "third attribute" {
    assert.equals(8, a.c())
  }

  test "sum of all attributes" {
    assert.equals(22, a.m())
  }

}
