/**
  * A class with a method in which it throws an exception
  */
class A { 
  method m1() { throw new Exception() }
  method m5(a, b) { return a - b }
}

/**
  * Tests
  */
describe "message not understood" {

  test "sending a message not understood should fail" {
    const a = new A()
    try {
      a.m2()
      assert.fail("Should have thrown message not understood")
    }
    catch e : MessageNotUnderstoodException {
      // ok !
    }
  }

  test "message not understood - less parameters case" {
    const a = new A()
    try {
      a.m5()
      assert.fail("Should have thrown message not understood")
    }
    catch e : MessageNotUnderstoodException {
      // ok !
    }
  }

  test "message not understood - more parameters case" {
    const a = new A()
    try {
      a.m1(2, new Date())
      assert.fail("Should have thrown message not understood")
    }
    catch e : MessageNotUnderstoodException {
      // ok !
    }
  }

  test "message not understood - case sensitive" {
    const a = new A()
    try {
      a.M1(3)
      assert.fail("Should have thrown message not understood")
    }
    catch e : MessageNotUnderstoodException {
      // ok !
    }
  }

  test "message not understood with literals case sensitive" {
    try {
      4.truncATE(2)
      assert.fail("Should have thrown message not understood")
    }
    catch e : MessageNotUnderstoodException {
      // ok !
    }
  }

  test "message not understood with literals - less parameters" {
    try {
      4.truncate()
      assert.fail("Should have thrown message not understood")
    }
    catch e : MessageNotUnderstoodException {
      // ok !
    }
  }

  test "message not understood with params" {
    const a = new A()
    try {
      a.m2(2, 4)
      assert.fail("Should have thrown message not understood")
    }
    catch e : MessageNotUnderstoodException {
      // ok !
    }
  }

}
