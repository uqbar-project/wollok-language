/**
  * Scenario 1: a named object inheriting from a class
  */
class A {
  method m() = 5
}

object o inherits A { }

/**
  * Scenario 2: a named object inheriting from a class using constructor
  */
class B {
  constructor(b) {
  }
  method m() = 6
}

object o2 inherits B(5) { }

/**
  * Scenario 3: a named object inheriting from a class and linearized with one mixin
  */
mixin M {
  method z() = 10
}

mixin M2 {
  method z2() = 11
}

object o3 inherits B (6) mixed with M { }

/**
  * Scenario 4: a named object without explicit parent and linearized with several mixins
  */
object o4 mixed with M and M2 { }

/**
  * Scenario 5: a named object inheriting from a class and linearized with several mixins
  */
object o5 inherits B (5) mixed with M and M2 { }

describe "singletons - customs named object, classes and mixins" {

  test "objects that inherits from a class" {
    assert.equals(5, o.m())
  }

  test "object that inherit from a class with explicit builders" {
    assert.equals(6, o2.m())
  }

  test "object that inherit from a class and have a mixin" {
    assert.equals(6, o3.m())
    assert.equals(10, o3.z())
  }

  test "object thats have multiple mixins" {
    assert.equals(11, o4.z2())
    assert.equals(10, o4.z())
  }

  test "object that inherit from a class and have multiple mixins" {
    assert.equals(6, o5.m())
    assert.equals(11, o5.z2())
    assert.equals(10, o5.z())
  }

}
