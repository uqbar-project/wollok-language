/**
  * Scenario:
  * - a superclass with a template method
  * - a subclass implementing an overriden primitive / hook method
  */
class Golondrina {
  var energia = 100

  method energia() = energia

  method volar(kms) {
    energia = energia - self.gastoParaVolar(kms) // Invocacion a m√©todo que se va a sobreescribir
  }

  method gastoParaVolar(kms) = kms
}

class NoSeCansa inherits Golondrina {
  override method gastoParaVolar(kms) = 0
}

/**
  * Tests
  */
describe "template method" {

  test "behavior for superclass is not affected by subclasses definitions" {
    const pepita = new Golondrina()
    pepita.volar(50)
    assert.equals(50, pepita.energia())
  }

  test "behavior for subclass is overridden by primitive method" {
    const pepona = new NoSeCansa()
    pepona.volar(50)
    assert.equals(100, pepona.energia()) // keeps initial energy
  }

}
